<?php
/**
 * Created by PhpStorm.
 * User: joey
 * Date: 2/29/2016
 * Time: 2:48 PM
 */

namespace NovakSolutions\FrontDesk\Operation{{ frontOrDesk }};
use NovakSolutions\FrontDesk\Operation;

/**
 * Class {{ className }}
 * @package NovakSolutions\FrontDesk\Operation{{ frontOrDesk }}
{% for field in method.fields %} * @property {{ descriptionToPhpDocType(field.type) }} ${{ field.name }}
{% endfor %}
 */
class {{ className }} extends Operation\Operation {
    public static $httpMethod = '{{ method.httpMethod }}';
    public static $urlPath = '{{ method.url }}';
    public static $noSubdomain = {{ noSubdomain }};
    public static $returnsModelClass = 'method.modelClassName';
    public static $returnArrayKey = 'method.returnsArrayKey';
{% if method.parameters %}

{% for parameter in method.parameters %}    const PARAM_{{ parameter.name|upper }} = '{{ parameter.name }}';
{% endfor %}

{% endif %}
    public static $fields = array(
{% for field in method.fields %}        '{{ field.name }}',
{% endfor %}
    );

    public static $parameters = array(
{% for parameter in method.parameters %}        '{{ parameter.name }}',
{% endfor %}
    );
{% if method.method == "GET" %}

{% if method.parameters %}    /**
    * @param array $getParametersData
{% for parameter in method.parameters %}    * {{ parameter.name|rpad20 }} {{ descriptionToPhpDocType(parameter.type)|rpad10 }} {{ parameter.description }}
{% endfor %}
    */
{% endif %}
    public static function get({% if urlArguments %}${{ urlArguments|join(', $') }}, {% endif %}{% if method.parameters %}$getParameters = array(), {% endif %}$businessSubdomain = null){
    {% if urlArguments %}
        $urlArguments = compact('{{ urlArguments|join("', '") }}');
    {% else %}
        $urlArguments = array();
    {% endif %}
        self::makeRequest($urlArguments, {% if method.parameters %}$getParameters{% else %}array(){% endif %}, array(), $businessSubdomain);
    }
{%  endif %}{% if method.method == "POST" %}
    public static function post({% if urlArguments %}${{ urlArguments|join(', $') }}, {% endif %}$data, $businessSubdomain = null){
    {% if urlArguments %}
        $urlArguments = compact('{{ urlArguments|join("', '") }}');
    {% else %}
        $urlArguments = array();
    {% endif %}
        self::makeRequest($urlArguments, $data, $businessSubdomain);
    }
{%  endif %}{% if method.method == "PUT" %}
    public static function put({% if urlArguments %}${{ urlArguments|join(', $') }}, {% endif %}$data, $businessSubdomain = null){
    {% if urlArguments %}
        $urlArguments = compact('{{ urlArguments|join("', '") }}');
    {% else %}
        $urlArguments = array();
    {% endif %}
        self::makeRequest($urlArguments, $data, $businessSubdomain);
    }
{%  endif %}{% if method.method == "DELETE" %}
    public static function delete({% if urlArguments %}${{ urlArguments|join(', $') }}, {% endif %}$businessSubdomain = null){
    {% if urlArguments %}
        $urlArguments = compact('{{ urlArguments|join("', '") }}');
    {% else %}
        $urlArguments = array();
    {% endif %}
        self::makeRequest($urlArguments, null, $businessSubdomain);
    }
{%  endif %}
}